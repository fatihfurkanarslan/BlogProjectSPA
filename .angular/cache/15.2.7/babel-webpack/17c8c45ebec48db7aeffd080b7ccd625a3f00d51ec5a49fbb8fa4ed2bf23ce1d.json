{"ast":null,"code":"import _defineProperty from \"C:/Users/Fatih Furkan Arslan/Desktop/Github/BlogProject-SPA/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Tagmodel } from '../models/tagmodel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT',\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n};\nconst httpOptionsGetNote = {\n  headers: new HttpHeaders({\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n};\nexport let NoteService = /*#__PURE__*/(() => {\n  class NoteService {\n    constructor(http) {\n      _defineProperty(this, \"http\", void 0);\n      _defineProperty(this, \"tag\", new Tagmodel());\n      _defineProperty(this, \"apiUrl\", environment.apiUrl + 'note/');\n      this.http = http;\n    }\n    getPopularNotes() {\n      return this.http.get(this.apiUrl + 'getpopularnotes');\n    }\n    getNotesWithScroll(pageNumber) {\n      return this.http.get(this.apiUrl + 'getnotes?pageNumber=' + pageNumber);\n    }\n    // get by note id\n    getNote(id) {\n      return this.http.get(this.apiUrl + 'getnote/' + id, httpOptions);\n    }\n    // get by category id\n    getNotes(id) {\n      return this.http.get(this.apiUrl + 'getnotesbycategory/' + id, httpOptions);\n    }\n    insertNote(note) {\n      return this.http.post(this.apiUrl + 'insert', note, httpOptions);\n    }\n    deleteNote(noteId) {\n      return this.http.delete(this.apiUrl + 'delete/' + noteId, httpOptions);\n    }\n    updateNote(note) {\n      return this.http.put(this.apiUrl + 'update', note, httpOptions);\n    }\n    updateNoteImage(note) {\n      return this.http.put(this.apiUrl + 'updateImage', note, httpOptions);\n    }\n    draftNote(note) {\n      return this.http.post(this.apiUrl + 'draft', note, httpOptions);\n    }\n    // drafts get by user id\n    getDraftNotes(id) {\n      return this.http.get(this.apiUrl + 'getnotesbyuser/' + id, httpOptions);\n    }\n    getNotesByTag(tag) {\n      console.log(\"getNotesByTag worked : \" + tag);\n      //error in tagparam Cannot set properties of undefined (setting 'tagParam')\n      this.tag.tagParam = tag;\n      return this.http.post(this.apiUrl + 'getnotesbytag', this.tag, httpOptions);\n    }\n  }\n  _defineProperty(NoteService, \"\\u0275fac\", function NoteService_Factory(t) {\n    return new (t || NoteService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(NoteService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NoteService,\n    factory: NoteService.ɵfac,\n    providedIn: 'root'\n  }));\n  return NoteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}