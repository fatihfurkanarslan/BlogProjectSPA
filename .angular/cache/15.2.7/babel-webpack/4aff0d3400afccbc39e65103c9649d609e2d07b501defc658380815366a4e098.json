{"ast":null,"code":"import _defineProperty from \"C:/Users/Fatih Furkan Arslan/Desktop/Github/BlogProject-SPA/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { CommentService } from './../../services/comment.service';\nimport { AuthService } from './../../services/auth.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Note } from 'src/app/models/note';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/comment.service\";\nimport * as i2 from \"./../../services/auth.service\";\nimport * as i3 from \"@angular/common/http\";\nfunction NotecommentsComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function NotecommentsComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\", 2)(2, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function NotecommentsComponent_form_0_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.model.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"button\", 4);\n    i0.ɵɵtext(5, \"Post \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.model.text);\n  }\n}\nexport let NotecommentsComponent = /*#__PURE__*/(() => {\n  class NotecommentsComponent {\n    constructor(commentService, authService, httpClient) {\n      _defineProperty(this, \"commentService\", void 0);\n      _defineProperty(this, \"authService\", void 0);\n      _defineProperty(this, \"httpClient\", void 0);\n      _defineProperty(this, \"note\", void 0);\n      _defineProperty(this, \"model\", {});\n      _defineProperty(this, \"id\", void 0);\n      _defineProperty(this, \"form\", new FormGroup({\n        Text: new FormControl('')\n      }));\n      this.commentService = commentService;\n      this.authService = authService;\n      this.httpClient = httpClient;\n    }\n    ngOnInit() {\n      this.id = +this.authService.decodedToken.nameid;\n      console.log('name and userId in comment component :' + this.id);\n    }\n    onSubmit() {\n      this.httpClient.get(\"http://api.ipify.org/?format=json\").subscribe(res => {\n        this.model.IPAddress = \"\" + res.ip;\n        console.log(\"idadress : \" + this.model.IPAddress);\n      });\n      this.model.userId = this.id;\n      this.model.noteId = this.note.id;\n      this.commentService.insertComment(this.model).subscribe(data => {\n        this.model.text = '';\n        console.log('success to insert comment :' + data);\n      }, error => {\n        console.log('failed to insert comment :' + error);\n      });\n    }\n  }\n  _defineProperty(NotecommentsComponent, \"\\u0275fac\", function NotecommentsComponent_Factory(t) {\n    return new (t || NotecommentsComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  });\n  _defineProperty(NotecommentsComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotecommentsComponent,\n    selectors: [[\"app-notecomments\"]],\n    inputs: {\n      note: \"note\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"Text\", \"required\", \"\", \"placeholder\", \"Write A Response\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-label\", \"Show an example snack-bar\", \"mat-raised-button\", \"\"]],\n    template: function NotecommentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NotecommentsComponent_form_0_Template, 6, 2, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.id);\n      }\n    },\n    styles: [\".example-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.example-container[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{width:100%}.button[_ngcontent-%COMP%]{margin-left:42%;margin-right:42%;background-color:#f6f6f6}.example-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.example-full-width[_ngcontent-%COMP%]{margin-left:15%;margin-right:15%}input[_ngcontent-%COMP%]{background-color:#f6f6f6}\"]\n  }));\n  return NotecommentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}