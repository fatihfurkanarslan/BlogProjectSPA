{"ast":null,"code":"import _defineProperty from \"C:/Users/Fatih Furkan Arslan/Desktop/Github/BlogProject-SPA/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { EventEmitter } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { User } from './../models/user';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Cache-Control': 'no-cache',\n    'Pragma': 'no-cache',\n    'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT',\n    'Authorization': 'Bearer ' + localStorage.getItem('user')\n  }).set('content', 'application/json')\n};\nexport let ProfileService = /*#__PURE__*/(() => {\n  class ProfileService {\n    constructor(http) {\n      _defineProperty(this, \"http\", void 0);\n      _defineProperty(this, \"apiUrl\", environment.apiUrl + 'user/');\n      _defineProperty(this, \"user\", new User());\n      _defineProperty(this, \"returnedUser\", new User());\n      _defineProperty(this, \"decodedToken\", void 0);\n      _defineProperty(this, \"jwtHelper\", new JwtHelperService());\n      _defineProperty(this, \"getChangeInPhoto\", new EventEmitter());\n      this.http = http;\n      //this.user = new User();\n    }\n\n    getUser(userId) {\n      return this.http.get(this.apiUrl + 'getuser/' + userId, httpOptions);\n    }\n    getProfile(userId) {\n      return this.http.get(this.apiUrl + 'getuser/' + userId, httpOptions);\n    }\n    getSearchedUsers(wordandIdToSearch) {\n      return this.http.get(this.apiUrl + 'getsearchedusers?' + wordandIdToSearch, httpOptions);\n    }\n    getUsers(wordToSearch) {\n      return this.http.get(this.apiUrl + 'getusers/' + wordToSearch, httpOptions);\n    }\n    updateUser(user) {\n      return this.http.put(this.apiUrl + 'update', user, httpOptions).pipe(map(response => {\n        // tslint:disable-next-line:prefer-const\n        //this.user = response;\n        console.log('response id ' + response.id);\n        console.log('response url ' + response.photoUrl);\n        // let token = localStorage.getItem('token');\n        // this.decodedToken = this.jwtHelper.decodeToken(token);\n        // // this.fireIsLoggedIn.emit(user);\n        //     // tslint:disable-next-line:prefer-const\n        let userId = localStorage.getItem('editUserId');\n        console.log('userIDDD' + userId);\n        //let userId = localStorage.getItem('editUserId');\n        this.getProfile(userId).subscribe(result => {\n          this.returnedUser = result;\n          // emit kullanılabilir refresh yapmadan bağımsız componentlar için\n          console.log(\"profil service photo url : \" + this.returnedUser.photoUrl);\n          this.getChangeInPhoto.emit(this.returnedUser.photoUrl);\n        }, error => {\n          console.log('user data fetch failed.');\n        });\n        // emit kullanılabilir refresh yapmadan bağımsız componentlar için\n        //   let userId = localStorage.getItem('editUserId');\n        //   this.getUser(+userId).subscribe((result: User) => {\n        //   this.user = result;\n        //   // emit kullanılabilir refresh yapmadan bağımsız componentlar için\n        //   console.log(\"profil service photo url : \" + this.user.photourl);\n        //   \n        // },\n        // error => {\n        //   console.log('user data fetch failed.');\n        //           });\n        return this.user;\n      }));\n    }\n  }\n  _defineProperty(ProfileService, \"\\u0275fac\", function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(ProfileService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  }));\n  return ProfileService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}